@page "/Deliver"
<h3>Deliver</h3>
@inject IRepository repository
@inject SweetAlertService sweet
<div class="card">
    <div class="card-header">
        <h3>SaleReverse</h3>
    </div>
    <div class="card-body">
        <EditForm Model="DeliverDTO" OnValidSubmit="Add">
            <DataAnnotationsValidator />
            <div>
                <div>
                    <label>Tipo Operación</label>
                    <div>
                        <InputSelect class="form-select" @bind-Value="DeliverDTO.IsDeliver">
                            <option>--Seleccionar--</option>
                            <option value=true>Entregar</option>
                            <option value=false>Recibir</option>
                        </InputSelect>
                        <ValidationMessage For="(()=> DeliverDTO.IsDeliver)" />
                    </div>
                </div>
                <div>
                    <label>Monto </label>
                    <div>
                        <InputNumber class="form-control" @bind-Value="DeliverDTO.Mont" />
                        <ValidationMessage For="(()=> DeliverDTO.Mont)" />
                    </div>
                </div>
                <div>
                    <label>Observación</label>
                    <div>
                        <InputText class="form-control" @bind-Value="DeliverDTO.Details" />
                    </div>
                </div>

                <div>
                    <label>Vendedor</label>
                    <div>
                        <InputSelect class="form-select" @bind-Value="DeliverDTO.IdUser">
                            
                            @if (users != null)
                            {
                                @foreach (var act in users)
                                {
                                    <option value="@act.Id">@act.Name</option>
                                }
                            }
                        </InputSelect>
                        <ValidationMessage For="(()=> DeliverDTO.IdUser)" />
                    </div>
                </div>
                <div class="b-3 card-footer">
                    <button class="btn btn-success" type="submit">Agregar</button>
                </div>
            </div>
        </EditForm>
    </div>

</div>


@code {
    private DeliverOrReceiveDTO DeliverDTO = new ();
    private List<User> users;

    protected override async Task OnInitializedAsync()
    { 
        var response2 = await repository.Get<List<User>>($"{Apis.User}/All");
        users = response2.Response;
    }
    private async Task Add()
    {
        
    }
}
