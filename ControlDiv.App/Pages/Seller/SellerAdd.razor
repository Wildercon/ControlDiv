@page "/Seller/Add"
@inject IRepository repository;
@inject NavigationManager navmanager;
@inject SweetAlertService sweetAlertService;
<h3>Agregar Vendedor</h3>

<EditForm Model="seller" OnValidSubmit="Create">
    <DataAnnotationsValidator/>
    <div class="row">
        <div class="col-6">
            <div>
                <label>Nombre</label>
                <div>
                    <InputText class="form-control" @bind-Value="seller.Name" />
                    <ValidationMessage For="(()=> seller.Name)" />
                </div>                
            </div>
            <div>
                <label>Comisión</label>
                <div>
                    <InputNumber class="form-control" @bind-Value="seller.Commission" />
                    <ValidationMessage For="(()=> seller.Commission)" />
                </div>
            </div>
        </div>
        <div class="col-6">
            <div>              
                <label>Monto</label>
                <div>
                    <InputNumber class="form-control" @bind-Value="seller.Mont" />
                    <ValidationMessage For="(()=> seller.Mont)" />
                </div>
            </div>
        </div>
        
    </div>
    <button class="btn btn-primary" type="submit">Agregar</button>
</EditForm>
@code {
    private Seller seller = new();
    private async Task Create()
    {
        var httpresponse =  await repository.Post<Seller>(Apis.Seller ,seller);
        if (httpresponse.Error)
        {
            var message = await httpresponse.GetErrorMessageAsync();
            await sweetAlertService.FireAsync("Error", message, SweetAlertIcon.Error);
            return;
        }
        else
        {
            navmanager.NavigateTo("SellerIndex");
            var toast = sweetAlertService.Mixin(new SweetAlertOptions
                {
                    Toast = true,
                    Position = SweetAlertPosition.TopEnd,
                    ShowConfirmButton = true,
                    Timer = 5000
                });
            await toast.FireAsync(icon: SweetAlertIcon.Success, message: "Registro Exitoso.");
        }
    }
}
